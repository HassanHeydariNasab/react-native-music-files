{"version":3,"sources":["index.tsx"],"names":["NativeModules","Platform","DeviceEventEmitter","MusicFiles","startListenTracks","options","Promise","res","rej","OS","getAll","syncTracks","onTrackReceived","addListener"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,kBAAlC,QAA4D,cAA5D;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAiBH,aAAvB;;AAgBA,MAAMI,iBAAiB,GAAIC,OAAD,IAA+B;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAY;AAC3B,QAAGP,QAAQ,CAACQ,EAAT,KAAgB,SAAnB,EAA6B;AACzBN,MAAAA,UAAU,CAACO,MAAX,CAAkBL,OAAlB,EAA2BE,GAA3B,EAAgCC,GAAhC;AACH,KAFD,MAEK;AACDA,MAAAA,GAAG,CAAC,wBAAD,CAAH;AACH;AACJ,GANM,CAAP;AAOH,CARD;;AAUA,OAAO,MAAMG,UAAU,GAAG,CAACN,OAAD,EAA4BO,eAA5B,KAA0E;AAChGV,EAAAA,kBAAkB,CAACW,WAAnB,CAA+B,gBAA/B,EAAiDD,eAAjD;AACA,SAAOR,iBAAiB,CAACC,OAAD,CAAxB;AACH,CAHM;AAKP,eAAeF,UAAf","sourcesContent":["import { NativeModules, Platform, DeviceEventEmitter } from 'react-native';\n\nconst { MusicFiles } = NativeModules;\n\nexport interface MusicFileOptions {\n    minimumSongDuration: number;\n}\n\nexport interface MusicFile {\n    id: string;\n    path: string;\n    artist: string;\n    title: string;\n    displayName: string;\n    album: string;\n}\n\n\nconst startListenTracks = (options: MusicFileOptions) => {\n    return new Promise((res, rej)=>{\n        if(Platform.OS === 'android'){\n            MusicFiles.getAll(options, res, rej);\n        }else{\n            rej('not support on ios yet');\n        }\n    })\n}\n\nexport const syncTracks = (options: MusicFileOptions, onTrackReceived: (track: MusicFile)=> void) =>{\n    DeviceEventEmitter.addListener(\"onSongReceived\", onTrackReceived);\n    return startListenTracks(options);\n}\n\nexport default MusicFiles;\n"]}